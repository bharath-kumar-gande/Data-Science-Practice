# Modle one with DT + EDA + FE
import pandas as pd
from sklearn import tree, preprocessing, model_selection, ensemble
import os
titanic_train = pd.read_csv('/Users/bharath/Downloads/titanic/train.csv')
titanic_train.info()
titanic_test = pd.read_csv('/Users/bharath/Downloads/titanic/test.csv')
titanic_test.info()

mean_imputer = preprocessing.Imputer()
mean_imputer.fit(titanic_train[['Age','Fare']])
titanic_test['Survived'] = None
titanic = pd.concat([titanic_train, titanic_test])
titanic[['Age','Fare']] = mean_imputer.transform(titanic[['Age','Fare']])
titanic.info()
def split_title(name):
    return name.split(',')[1].split('.')[0].strip()

titanic['Title'] = titanic['Name'].map(split_title)
def Age_group(age):
    if (age >=0 and age <=10):
        return 'Child'
    elif (age >10 and age <= 25):
          return 'Young'
    elif (age >25 and age <= 50):
          return 'Middle'
    else:
        return 'Old'
        titanic['Age1'] = titanic['Age'].map(Age_group)
        titanic['FamilySize'] = titanic['Parch'] + titanic['SibSp'] + 1
def family_size(size):
    if (size ==1):
        return 'Single'
    elif (size >1 and size <= 3):
          return 'Small'
    elif (size >3 and size <=6):
          return 'Medium'
    else:
        return 'large'
    titanic['Family_type'] = titanic['FamilySize'].map(family_size)
  titanic1 = pd.get_dummies(titanic, columns=['Pclass','Sex','Embarked','Age1','Family_type','Title'])
  
  titanic2 = titanic1.drop(['Age','Cabin','Name','PassengerId','Ticket','Survived'],1) 
# why 'Parch','SibSp' are not dropped ?
x_train = titanic2[0:titanic_train.shape[0]]
y_train = titanic_train['Survived']

dt = tree.DecisionTreeClassifier(random_state=10)
dt_grid = {'max_depth':[2,3,4], 'min_samples_split':[2,4,5], }
param_grid = model_selection.GridSearchCV(dt, dt_grid, cv=5, n_jobs=5)

param_grid.fit(x_train,y_train)

param_grid.best_estimator_
param_grid.best_score_

param_grid.score(x_train,y_train)
x_test = titanic2[titanic_train.shape[0]:]
titanic_test['Survived'] = param_grid.predict(x_test)
os.chdir('/Users/bharath/Downloads/titanic')
titanic_test.to_csv('M1 with Dtree.csv', columns= ['PassengerId', 'Survived'], index=False)

  
